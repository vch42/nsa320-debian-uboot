preboot=setenv stderr serial; setenv stdin serial; setenv stdout serial; setenv baudrate 115200; setenv console ttyS0,$baudrate; setenv bootdelay 10

stderr=serial
stdin=serial
stdout=serial
baudrate=115200
console=ttyS0,$baudrate
bootdelay=10

led_error=orange blinking
led_exit=green off
led_init=green blinking

ethact=egiga0
ethaddr=28:28:5d:16:09:ee

mtdids=nand0=orion_nand
mtdparts=mtdparts=orion_nand:0x100000(uboot),0x80000(uboot_env),0x80000(key_store),0x80000(info),0xA00000(etc),0xA00000(kernel_1),0x2FC0000(rootfs1),0xA00000(kernel_2),0x2FC0000(rootfs2)
partition=nand0,2

file_uimage=/boot/uImage
file_uinitrd=/boot/uInitrd
file_uenv=/boot/uEnv

addr_uimage=0x0800000
addr_uenv=0x0810000
addr_uinitrd=0x1100000
addr_dtb=0x1c00000

load_dtb=echo loading DTB $file_dtb ...; load $bootdev $device $addr_dtb $file_dtb
load_uimage=echo loading uImage $file_uimage ...; load $bootdev $device $addr_uimage $file_uimage
load_uinitrd=echo loading uInitrd $file_uinitrd ...; load $bootdev $device $addr_uinitrd $file_uinitrd

devices=usb ide
disks=0 1 2 3
device=0:1
bootdev=usb
usb_ready_retry=15
rootdelay=10


set_bootargs=setenv bootargs console=$console root=$rootfs rootdelay=$rootdelay rootfstype=$rootfstype $mtdparts $initsystem $custom_params
scan_disk=echo running scan_disk ...; scan_done=0; setenv scan_usb "usb start"; setenv scan_ide "ide reset"; for dev in $devices; do if test $scan_done -eq 0; then echo Scan device $dev; run scan_$dev; for disknum in $disks; do if test $scan_done -eq 0; then echo device $dev $disknum:1; if load $dev $disknum:1 $addr_uimage $file_uimage 1; then scan_done=1; echo Found bootable drive on $dev $disknum; setenv device $disknum:1; setenv bootdev $dev; fi; fi; done; fi; done; sleep 3

bootcmd=mw 0x800000 0 1; run bootcmd_uenv; run scan_disk; run set_bootargs; run bootcmd_exec; sleep 5; reset
bootcmd_exec=run load_uimage; if run load_uinitrd; then if run load_dtb; then bootm $addr_uimage $addr_uinitrd $addr_dtb; else bootm $addr_uimage $addr_uinitrd; fi; else if run load_dtb; then bootm $addr_uimage - $addr_dtb; else bootm $addr_uimage; fi; fi
bootcmd_uenv=run uenv_load; if test $uenv_loaded -eq 1; then run uenv_import; fi; sleep 3

uenv_import=echo importing envs ...; env import -t $addr_uenv $filesize
uenv_init_devices=setenv init_usb "usb start"; setenv init_ide "ide reset"; for devtype in $devices; do run init_$devtype; done; sleep 3
uenv_load=run uenv_init_devices; setenv uenv_loaded 0; for devtype in $devices; do for disknum in $disks; do run uenv_read_disk; done; done;
uenv_read_disk=if $devtype part $disknum; then run uenv_read; fi; fi
uenv_read=if test $uenv_loaded -ne 1; then if load $devtype $disknum:1 $addr_uenv $file_uenv; then setenv uenv_loaded 1; echo loaded envs from $devtype $disknum ...; fi; fi


